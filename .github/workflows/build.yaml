name: Build Magento 2 releases

on:
  push:


jobs:
  build:
    strategy:
      matrix:
        include:
          - MAGENTO_VERSION: 2.4.7-p3
            PHP_VERSION: 8.2
          - MAGENTO_VERSION: 2.3.7-p4
            PHP_VERSION: 7.4

    runs-on: ubuntu-latest

    name: Build Magento 2 release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create ddev config.yaml
        run: |
          mkdir .ddev
          cp ddev-base/${{ matrix.PHP_VERSION }}/config.yaml .ddev/config.yaml

      - name: Setup DDEV
        uses: ddev/github-action-setup-ddev@v1

      - name: Install DDEV addons
        run: |
          ddev get ddev/ddev-elasticsearch
          ddev get ddev/ddev-redis
          mkdir .ddev/rabbitmq-build/
          wget https://raw.githubusercontent.com/ddev/ddev-contrib/master/docker-compose-services/rabbitmq/docker-compose.rabbitmq.yaml -O .ddev/docker-compose.rabbitmq.yaml
          wget https://raw.githubusercontent.com/ddev/ddev-contrib/master/docker-compose-services/rabbitmq/rabbitmq-build/enabled_plugins -O .ddev/rabbitmq-build/enabled_plugins
          sed -i '/ports:/d;/15672:15672/d;/5672:5672/d' .ddev/docker-compose.rabbitmq.yaml
          sed -i 's/RABBITMQ_DEFAULT_USER=rabbitmq/RABBITMQ_DEFAULT_USER=guest/' .ddev/docker-compose.rabbitmq.yaml
          sed -i 's/RABBITMQ_DEFAULT_PASS=rabbitmq/RABBITMQ_DEFAULT_PASS=guest/' .ddev/docker-compose.rabbitmq.yaml  
          ddev start

      - name: Create Magento install
        run: |
          curl -o magento.zip https://repo-magento-mirror.fooman.co.nz/dist/magento/project-community-edition/magento-project-community-edition-${{ matrix.MAGENTO_VERSION }}.zip
          unzip -q magento.zip -d .
          rm magento.zip

          if [ ${{ matrix.MAGENTO_VERSION }} != "2.3.7-p4" ]; then
            composer require --dev --no-update laminas/laminas-dependency-plugin
            composer require --dev --no-update dealerdirect/phpcodesniffer-composer-installer
          fi
          ddev composer config --unset repositories.0
          ddev composer config repositories.fooman composer https://repo-magento-mirror.fooman.co.nz/
          ddev composer install

          ddev exec rsync -a /tmp/exampleproject/ /var/www/html/

          ddev exec bin/magento setup:install \
            --backend-frontname=admin \
            --amqp-host=rabbitmq \
            --amqp-port=5672 \
            --amqp-user=guest \
            --amqp-password=guest \
            --db-host=db \
            --db-name=db \
            --db-user=db \
            --db-password=db \
            --search-engine=elasticsearch7 \
            --elasticsearch-host=elasticsearch \
            --elasticsearch-port=9200 \
            --elasticsearch-index-prefix=magento2 \
            --elasticsearch-enable-auth=0 \
            --elasticsearch-timeout=15 \
            --http-cache-hosts=varnish:80 \
            --session-save=redis \
            --session-save-redis-host=redis \
            --session-save-redis-port=6379 \
            --session-save-redis-db=2 \
            --session-save-redis-max-concurrency=20 \
            --cache-backend=redis \
            --cache-backend-redis-server=redis \
            --cache-backend-redis-db=0 \
            --cache-backend-redis-port=6379 \
            --page-cache=redis \
            --page-cache-redis-server=redis \
            --page-cache-redis-db=1 \
            --page-cache-redis-port=6379 \
            --base-url=https://$BASEURL \
            --timezone=Europe/Amsterdam \
            --currency=EUR \
            --admin-user=michiel \
            --admin-password=asdfasdf1 \
            --admin-email=michiel@controlaltdelete.nl \
            --admin-firstname=Michiel \
            --admin-lastname=Gerritsen \
            --use-rewrites=1

      - name: Create example admin user
        run: |
          ddev exec bin/magento admin:user:create --admin-user=exampleuser --admin-password=examplepassword123 --admin-email=example@example.com --admin-firstname=Example --admin-lastname=User
          ddev exec bin/magento config:set admin/security/password_lifetime 0
          ddev exec bin/magento config:set --lock-env web/unsecure/base_url "https://magento.test/"
          ddev exec bin/magento config:set --lock-env web/secure/base_url "https://magento.test/"
          ddev exec bin/magento module:disable Magento_TwoFactorAuth -f
          ddev exec bin/magento deploy:mode:set developer
          ddev exec composer config minimum-stability dev
          ddev exec bin/magento config:set admin/security/session_lifetime 31536000
          ddev exec bin/magento config:set web/cookie/cookie_lifetime 31536000
          ddev exec bin/magento config:set admin/security/password_lifetime 0

      - name: Create ZIP files
        run: |
          ddev exec zip -r /var/www/html/magento2-${{ matrix.MAGENTO_VERSION }}.zip /var/www/html
          ddev exec magerun2 db:dump -c gz -n magento2.sql.gz
          ddev exec zip -r /var/www/html/magento2-${{ matrix.MAGENTO_VERSION }}-with-db.zip /var/www/html

          # Install sample data
          ddev exec bin/magento sampledata:deploy
          ddev exec magerun2 db:dump -c gz -n magento2.sql.gz
          ddev exec zip -r /var/www/html/magento2-${{ matrix.MAGENTO_VERSION }}-with-sampledata.zip /var/www/html
